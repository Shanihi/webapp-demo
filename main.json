{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "5022374247153651397"
    }
  },
  "parameters": {
    "appServicePlan": {
      "type": "object"
    },
    "webApp": {
      "type": "object"
    },
    "sqlServer": {
      "type": "object"
    },
    "sqlDB": {
      "type": "object"
    },
    "newOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    }
  },
  "resources": [
    {
      "condition": "[equals(parameters('newOrExisting'), 'new')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('appServicePlan').name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanNameParam": {
            "value": "[parameters('appServicePlan').name]"
          },
          "appServicePlanSkuNameParam": {
            "value": "[parameters('appServicePlan').sku.name]"
          },
          "appServicePlanSkuTierParam": {
            "value": "[parameters('appServicePlan').sku.tier]"
          },
          "appServiceKindParam": {
            "value": "[parameters('appServicePlan').kind]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "391748495662388950"
            }
          },
          "parameters": {
            "appServicePlanNameParam": {
              "type": "string"
            },
            "appServicePlanSkuNameParam": {
              "type": "string"
            },
            "appServicePlanSkuTierParam": {
              "type": "string"
            },
            "appServiceKindParam": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Provide a location for the registry."
              }
            }
          },
          "variables": {
            "appServicePlanName": "[parameters('appServicePlanNameParam')]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-12-01",
              "name": "[variables('appServicePlanName')]",
              "location": "[parameters('location')]",
              "kind": "[parameters('appServiceKindParam')]",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "[parameters('appServicePlanSkuNameParam')]",
                "tier": "[parameters('appServicePlanSkuTierParam')]"
              }
            }
          ],
          "outputs": {
            "aspId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('newOrExisting'), 'new')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('webApp').name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanIdParam": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('appServicePlan').name), '2020-10-01').outputs.aspId.value]"
          },
          "linuxFxVersionParam": {
            "value": "[parameters('webApp').linuxFxVersion]"
          },
          "webAppNameParam": {
            "value": "[parameters('webApp').name]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "1076174620857631161"
            }
          },
          "parameters": {
            "appServicePlanIdParam": {
              "type": "string"
            },
            "linuxFxVersionParam": {
              "type": "string"
            },
            "webAppNameParam": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Provide a location for the registry."
              }
            }
          },
          "variables": {
            "webAppName": "[parameters('webAppNameParam')]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-01-01",
              "name": "[variables('webAppName')]",
              "location": "[parameters('location')]",
              "properties": {
                "siteConfig": {
                  "appSettings": [],
                  "linuxFxVersion": "[parameters('linuxFxVersionParam')]"
                },
                "serverFarmId": "[parameters('appServicePlanIdParam')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', parameters('appServicePlan').name)]"
      ]
    },
    {
      "condition": "[equals(parameters('newOrExisting'), 'new')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[parameters('sqlServer').name]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serverNameParam": {
            "value": "[parameters('sqlServer').name]"
          },
          "administratorLoginParam": {
            "value": "[parameters('sqlServer').administratorLogin]"
          },
          "administratorLoginPasswordParam": {
            "value": "[parameters('sqlServer').administratorLoginPassword]"
          },
          "serverVersionParam": {
            "value": "[parameters('sqlServer').version]"
          },
          "federatedClientIdParam": {
            "value": "[parameters('sqlServer').federatedClientId]"
          },
          "minimalTlsVersionPeram": {
            "value": "[parameters('sqlServer').minimalTlsVersion]"
          },
          "primaryUserAssignedIdentityIdParam": {
            "value": "[parameters('sqlServer').primaryUserAssignedIdentityId]"
          },
          "publicNetworkAccessParam": {
            "value": "[parameters('sqlServer').publicNetworkAccess]"
          },
          "restrictOutboundNetworkAccessParam": {
            "value": "[parameters('sqlServer').restrictOutboundNetworkAccess]"
          },
          "sqlDBNameParam": {
            "value": "[parameters('sqlDB').sku.name]"
          },
          "skuTierParam": {
            "value": "[parameters('sqlDB').sku.tier]"
          },
          "skuSizeMBParam": {
            "value": "[parameters('sqlDB').sku.size]"
          },
          "skuCapacityParam": {
            "value": "[parameters('sqlDB').sku.capacity]"
          },
          "skuFamilyParam": {
            "value": "[parameters('sqlDB').sku.family]"
          },
          "sqlAutoPauseDelayParam": {
            "value": "[parameters('sqlDB').autoPauseDelay]"
          },
          "sqlCatalogCollationParam": {
            "value": "[parameters('sqlDB').catalogCollation]"
          },
          "sqlCollationParam": {
            "value": "[parameters('sqlDB').collation]"
          },
          "sqlDBCreateModeParam": {
            "value": "[parameters('sqlDB').createMode]"
          },
          "sqlElasticPoolIdParam": {
            "value": "[parameters('sqlDB').elasticPoolId]"
          },
          "sqlFederatedClientIdParam": {
            "value": "[parameters('sqlDB').federatedClientId]"
          },
          "sqlHighAvailabilityReplicaCountParam": {
            "value": "[parameters('sqlDB').highAvailabilityReplicaCount]"
          },
          "sqlIsLedgerOnParam": {
            "value": "[parameters('sqlDB').isLedgerOn]"
          },
          "sqlLicenseTypeParam": {
            "value": "[parameters('sqlDB').licenseType]"
          },
          "sqlLongTermRetentionBackupResourceIdParam": {
            "value": "[parameters('sqlDB').longTermRetentionBackupResourceId]"
          },
          "sqlMaintenanceConfigurationIdParam": {
            "value": "[parameters('sqlDB').maintenanceConfigurationId]"
          },
          "sqlMaxSizeBytesParam": {
            "value": "[parameters('sqlDB').maxSizeBytes]"
          },
          "sqlMinCapacityParam": {
            "value": "[parameters('sqlDB').minCapacity]"
          },
          "sqlPreferredEnclaveTypeParam": {
            "value": "[parameters('sqlDB').preferredEnclaveType]"
          },
          "sqlReadScaleParam": {
            "value": "[parameters('sqlDB').readScale]"
          },
          "sqlRecoverableDatabaseIdParam": {
            "value": "[parameters('sqlDB').recoverableDatabaseId]"
          },
          "sqlRecoveryServicesRecoveryPointIdParam": {
            "value": "[parameters('sqlDB').recoveryServicesRecoveryPointId]"
          },
          "sqlRequestedBackupStorageRedundancyParam": {
            "value": "[parameters('sqlDB').requestedBackupStorageRedundancy]"
          },
          "sqlRestorableDroppedDatabaseIdParam": {
            "value": "[parameters('sqlDB').restorableDroppedDatabaseId]"
          },
          "sqlRestorePointInTimeParam": {
            "value": "[parameters('sqlDB').restorePointInTime]"
          },
          "sqlSampleNameParam": {
            "value": "[parameters('sqlDB').sampleName]"
          },
          "sqlSecondaryTypeParam": {
            "value": "[parameters('sqlDB').secondaryType]"
          },
          "sqlSourceDatabaseDeletionDateParam": {
            "value": "[parameters('sqlDB').sourceDatabaseDeletionDate]"
          },
          "sqlSourceDatabaseIdParam": {
            "value": "[parameters('sqlDB').sourceDatabaseId]"
          },
          "sqlSourceResourceIdParam": {
            "value": "[parameters('sqlDB').sourceResourceId]"
          },
          "sqlZoneRedundantParam": {
            "value": "[parameters('sqlDB').zoneRedundant]"
          },
          "sqlDBFirewallNameParam": {
            "value": "[parameters('sqlDB').firewall.name]"
          },
          "sqlStartIpAddressParam": {
            "value": "[parameters('sqlDB').firewall.startIpAddress]"
          },
          "sqlEndIpAddressParam": {
            "value": "[parameters('sqlDB').firewall.endIpAddress]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "706335807836344948"
            }
          },
          "parameters": {
            "serverNameParam": {
              "type": "string"
            },
            "administratorLoginParam": {
              "type": "string"
            },
            "serverVersionParam": {
              "type": "string"
            },
            "federatedClientIdParam": {
              "type": "string"
            },
            "minimalTlsVersionPeram": {
              "type": "string"
            },
            "primaryUserAssignedIdentityIdParam": {
              "type": "string"
            },
            "publicNetworkAccessParam": {
              "type": "string"
            },
            "restrictOutboundNetworkAccessParam": {
              "type": "string"
            },
            "skuTierParam": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "metadata": {
                "description": "Azure database for MySQL pricing tier"
              }
            },
            "skuCapacityParam": {
              "type": "int",
              "metadata": {
                "description": "Azure database for MySQL compute capacity in vCores (2,4,8,16,32)"
              }
            },
            "skuFamilyParam": {
              "type": "string",
              "metadata": {
                "description": "Azure database for MySQL sku family"
              }
            },
            "skuSizeMBParam": {
              "type": "string",
              "metadata": {
                "description": "Azure database for MySQL Sku Size "
              }
            },
            "sqlDBCreateModeParam": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Provide a location for the registry."
              }
            },
            "sqlAutoPauseDelayParam": {
              "type": "int"
            },
            "sqlCatalogCollationParam": {
              "type": "string"
            },
            "sqlCollationParam": {
              "type": "string"
            },
            "sqlDBNameParam": {
              "type": "string"
            },
            "sqlElasticPoolIdParam": {
              "type": "string"
            },
            "sqlFederatedClientIdParam": {
              "type": "string"
            },
            "sqlHighAvailabilityReplicaCountParam": {
              "type": "int"
            },
            "sqlIsLedgerOnParam": {
              "type": "bool"
            },
            "sqlLicenseTypeParam": {
              "type": "string"
            },
            "sqlLongTermRetentionBackupResourceIdParam": {
              "type": "string"
            },
            "sqlMaintenanceConfigurationIdParam": {
              "type": "string"
            },
            "sqlMaxSizeBytesParam": {
              "type": "int"
            },
            "sqlMinCapacityParam": {
              "type": "int"
            },
            "sqlPreferredEnclaveTypeParam": {
              "type": "string"
            },
            "sqlReadScaleParam": {
              "type": "string"
            },
            "sqlRecoverableDatabaseIdParam": {
              "type": "string"
            },
            "sqlRecoveryServicesRecoveryPointIdParam": {
              "type": "string"
            },
            "sqlRequestedBackupStorageRedundancyParam": {
              "type": "string"
            },
            "sqlRestorableDroppedDatabaseIdParam": {
              "type": "string"
            },
            "sqlRestorePointInTimeParam": {
              "type": "string"
            },
            "sqlSampleNameParam": {
              "type": "string"
            },
            "sqlSecondaryTypeParam": {
              "type": "string"
            },
            "sqlSourceDatabaseDeletionDateParam": {
              "type": "string"
            },
            "sqlSourceDatabaseIdParam": {
              "type": "string"
            },
            "sqlSourceResourceIdParam": {
              "type": "string"
            },
            "sqlZoneRedundantParam": {
              "type": "bool"
            },
            "administratorLoginPasswordParam": {
              "type": "securestring"
            },
            "sqlDBFirewallNameParam": {
              "type": "string"
            },
            "sqlStartIpAddressParam": {
              "type": "string"
            },
            "sqlEndIpAddressParam": {
              "type": "string"
            }
          },
          "variables": {
            "serverName": "[format('sql-{0}', uniqueString(parameters('serverNameParam')))]",
            "sqlDBName": "[parameters('sqlDBNameParam')]",
            "sqlDBFirewallName": "[parameters('sqlDBFirewallNameParam')]",
            "basicSqlProperties": {
              "autoPauseDelay": "[parameters('sqlAutoPauseDelayParam')]",
              "catalogCollation": "[parameters('sqlCatalogCollationParam')]",
              "collation": "[parameters('sqlCollationParam')]",
              "createMode": "[parameters('sqlDBCreateModeParam')]",
              "highAvailabilityReplicaCount": "[parameters('sqlHighAvailabilityReplicaCountParam')]",
              "isLedgerOn": "[parameters('sqlIsLedgerOnParam')]",
              "licenseType": "[parameters('sqlLicenseTypeParam')]",
              "maxSizeBytes": "[parameters('sqlMaxSizeBytesParam')]",
              "minCapacity": "[parameters('sqlMinCapacityParam')]",
              "readScale": "[parameters('sqlReadScaleParam')]",
              "requestedBackupStorageRedundancy": "[parameters('sqlRequestedBackupStorageRedundancyParam')]",
              "sampleName": "[parameters('sqlSampleNameParam')]",
              "zoneRedundant": "[parameters('sqlZoneRedundantParam')]"
            },
            "generalSqlProperties": {
              "autoPauseDelay": "[parameters('sqlAutoPauseDelayParam')]",
              "catalogCollation": "[parameters('sqlCatalogCollationParam')]",
              "collation": "[parameters('sqlCollationParam')]",
              "createMode": "[parameters('sqlDBCreateModeParam')]",
              "elasticPoolId": "[parameters('sqlElasticPoolIdParam')]",
              "federatedClientId": "[parameters('sqlFederatedClientIdParam')]",
              "highAvailabilityReplicaCount": "[parameters('sqlHighAvailabilityReplicaCountParam')]",
              "isLedgerOn": "[parameters('sqlIsLedgerOnParam')]",
              "licenseType": "[parameters('sqlLicenseTypeParam')]",
              "longTermRetentionBackupResourceId": "[parameters('sqlLongTermRetentionBackupResourceIdParam')]",
              "maintenanceConfigurationId": "[parameters('sqlMaintenanceConfigurationIdParam')]",
              "maxSizeBytes": "[parameters('sqlMaxSizeBytesParam')]",
              "minCapacity": "[parameters('sqlMinCapacityParam')]",
              "preferredEnclaveType": "[parameters('sqlPreferredEnclaveTypeParam')]",
              "readScale": "[parameters('sqlReadScaleParam')]",
              "recoverableDatabaseId": "[parameters('sqlRecoverableDatabaseIdParam')]",
              "recoveryServicesRecoveryPointId": "[parameters('sqlRecoveryServicesRecoveryPointIdParam')]",
              "requestedBackupStorageRedundancy": "[parameters('sqlRequestedBackupStorageRedundancyParam')]",
              "restorableDroppedDatabaseId": "[parameters('sqlRestorableDroppedDatabaseIdParam')]",
              "restorePointInTime": "[parameters('sqlRestorePointInTimeParam')]",
              "sampleName": "[parameters('sqlSampleNameParam')]",
              "secondaryType": "[parameters('sqlSecondaryTypeParam')]",
              "sourceDatabaseDeletionDate": "[parameters('sqlSourceDatabaseDeletionDateParam')]",
              "sourceDatabaseId": "[parameters('sqlSourceDatabaseIdParam')]",
              "sourceResourceId": "[parameters('sqlSourceResourceIdParam')]",
              "zoneRedundant": "[parameters('sqlZoneRedundantParam')]"
            },
            "memorySqlProperties": {
              "autoPauseDelay": "[parameters('sqlAutoPauseDelayParam')]",
              "catalogCollation": "[parameters('sqlCatalogCollationParam')]",
              "collation": "[parameters('sqlCollationParam')]",
              "createMode": "[parameters('sqlDBCreateModeParam')]",
              "elasticPoolId": "[parameters('sqlElasticPoolIdParam')]",
              "federatedClientId": "[parameters('sqlFederatedClientIdParam')]",
              "highAvailabilityReplicaCount": "[parameters('sqlHighAvailabilityReplicaCountParam')]",
              "isLedgerOn": "[parameters('sqlIsLedgerOnParam')]",
              "licenseType": "[parameters('sqlLicenseTypeParam')]",
              "longTermRetentionBackupResourceId": "[parameters('sqlLongTermRetentionBackupResourceIdParam')]",
              "maintenanceConfigurationId": "[parameters('sqlMaintenanceConfigurationIdParam')]",
              "maxSizeBytes": "[parameters('sqlMaxSizeBytesParam')]",
              "minCapacity": "[parameters('sqlMinCapacityParam')]",
              "preferredEnclaveType": "[parameters('sqlPreferredEnclaveTypeParam')]",
              "readScale": "[parameters('sqlReadScaleParam')]",
              "recoverableDatabaseId": "[parameters('sqlRecoverableDatabaseIdParam')]",
              "recoveryServicesRecoveryPointId": "[parameters('sqlRecoveryServicesRecoveryPointIdParam')]",
              "requestedBackupStorageRedundancy": "[parameters('sqlRequestedBackupStorageRedundancyParam')]",
              "restorableDroppedDatabaseId": "[parameters('sqlRestorableDroppedDatabaseIdParam')]",
              "restorePointInTime": "[parameters('sqlRestorePointInTimeParam')]",
              "sampleName": "[parameters('sqlSampleNameParam')]",
              "secondaryType": "[parameters('sqlSecondaryTypeParam')]",
              "sourceDatabaseDeletionDate": "[parameters('sqlSourceDatabaseDeletionDateParam')]",
              "sourceDatabaseId": "[parameters('sqlSourceDatabaseIdParam')]",
              "sourceResourceId": "[parameters('sqlSourceResourceIdParam')]",
              "zoneRedundant": "[parameters('sqlZoneRedundantParam')]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2022-05-01-preview",
              "name": "[variables('serverName')]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "[parameters('administratorLoginParam')]",
                "administratorLoginPassword": "[parameters('administratorLoginPasswordParam')]",
                "version": "[parameters('serverVersionParam')]",
                "federatedClientId": "[parameters('federatedClientIdParam')]",
                "minimalTlsVersion": "[parameters('minimalTlsVersionPeram')]",
                "primaryUserAssignedIdentityId": "[parameters('primaryUserAssignedIdentityIdParam')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccessParam')]",
                "restrictOutboundNetworkAccess": "[parameters('restrictOutboundNetworkAccessParam')]"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2022-05-01-preview",
              "name": "[format('{0}/{1}', variables('serverName'), variables('sqlDBName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sqlDBNameParam')]",
                "tier": "[parameters('skuTierParam')]",
                "size": "[parameters('skuSizeMBParam')]",
                "capacity": "[parameters('skuCapacityParam')]",
                "family": "[parameters('skuFamilyParam')]"
              },
              "properties": "[if(equals(parameters('skuTierParam'), 'Basic'), variables('basicSqlProperties'), if(equals(parameters('skuTierParam'), 'GeneralPurpose'), variables('generalSqlProperties'), variables('memorySqlProperties')))]",
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
              ]
            },
            {
              "type": "Microsoft.Sql/servers/firewallRules",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', variables('serverName'), variables('sqlDBFirewallName'))]",
              "properties": {
                "startIpAddress": "[parameters('sqlStartIpAddressParam')]",
                "endIpAddress": "[parameters('sqlEndIpAddressParam')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('serverName'))]"
              ]
            }
          ]
        }
      }
    }
  ]
}